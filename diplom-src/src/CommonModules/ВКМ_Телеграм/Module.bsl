
#Область СлужебныеПроцедурыИФункции

//процедура регламентного задания	ВКМ_ОтправкаУведомленийТелеграмБоту
Процедура ОтправкаУведомленийТелеграмБоту() Экспорт
	
	ТокенУправления = Константы.ВКМ_ТокенУправленияТелеграмБотом.Получить();
	ИдентификаторГруппы = Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить();
	
	Если ПустаяСтрока(ТокенУправления) тогда
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка отправки уведомлений Телеграм-Боту'"),
		УровеньЖурналаРегистрации.Ошибка,
		Метаданные.РегламентныеЗадания.ВКМ_ОтправкаУведомленийТелеграмБоту,
		,
		"Не установлена константа Токен управления телеграм-ботом");
		
		Возврат;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ИдентификаторГруппы) тогда
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка отправки уведомлений Телеграм-Боту'"),
		УровеньЖурналаРегистрации.Ошибка,
		Метаданные.РегламентныеЗадания.ВКМ_ОтправкаУведомленийТелеграмБоту,
		,
		"Не установлена константа Идентификатор группы для оповещения");
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый  Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_УведомленияТелеграмБоту.Ссылка,
	|	ВКМ_УведомленияТелеграмБоту.ТекстСообщения
	|ИЗ
	|	Справочник.ВКМ_УведомленияТелеграмБоту КАК ВКМ_УведомленияТелеграмБоту";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() цикл
	
		ИтогОтправки = ВыполнитьОтправкуСообщенияВТелеграм(Результат.ТекстСообщения, ТокенУправления, ИдентификаторГруппы);
		
		Если ИтогОтправки.КодОтвета = 200 тогда
			
			ТекущийЭлементСправочника = Результат.Ссылка.ПолучитьОбъект();
			ТекущийЭлементСправочника.Удалить();
			
			Продолжить;
			
		КонецЕсли;
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка отправки уведомлений Телеграм-Боту'"),
		УровеньЖурналаРегистрации.Ошибка,
		Метаданные.РегламентныеЗадания.ВКМ_ОтправкаУведомленийТелеграмБоту,
		,
		ИтогОтправки.ОтветСтрокой);
		
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВыполнитьОтправкуСообщенияВТелеграм(ТекстСообщения, ТокенУправления, ИдентификаторГруппы)
	
	
	АдресРесурса = СтрШаблон("/bot%1/sendMessage", ТокенУправления);
	АдресХоста = "api.telegram.org";
	МетодЗапроса = "POST";
	
	ЗаголовкиHTTP=Новый Соответствие();
	ЗаголовкиHTTP.Вставить("Content-Type","application/json");
		
	HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса, ЗаголовкиHTTP);
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON(ТекстСообщения, ИдентификаторГруппы), 
	КодировкаТекста.UTF8, 
	ИспользованиеByteOrderMark.НеИспользовать);
	
	ЗащищенноеСоединениеSSL = Новый ЗащищенноеСоединениеOpenSSL(Новый СертификатКлиентаWindows, Новый СертификатыУдостоверяющихЦентровWindows); 
	Соединение = Новый HTTPСоединение(АдресХоста,,,,,, ЗащищенноеСоединениеSSL);
	
	Попытка
		Ответ = Соединение.ВызватьHTTPМетод(МетодЗапроса, HTTPЗапрос);
		ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		КодОтвета = Ответ.КодСостояния;
	Исключение
		КодОтвета = 0;
		ОтветСтрокой = СтрШаблон("Ошибка при выполнении http-запроса к %1. ТекстОшибки :%2", 
		АдресРесурса,
		ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Новый Структура("КодОтвета, ОтветСтрокой", КодОтвета, ОтветСтрокой);
	
КонецФункции

Функция СтрокаJSON(ТекстСообщения, ИдентификаторГруппы) 
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("chat_id", ИдентификаторГруппы);
	СтруктураДанных.Вставить("text", ТекстСообщения);
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет);
	
	ЗаписьJSON = Новый ЗаписьJSON;	
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);	
	ЗаписатьJSON(ЗаписьJSON, СтруктураДанных);
    Возврат ЗаписьJSON.Закрыть()
	
КонецФункции


#КонецОбласти


