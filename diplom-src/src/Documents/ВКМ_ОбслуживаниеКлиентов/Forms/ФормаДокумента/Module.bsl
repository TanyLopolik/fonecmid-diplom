
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//ВКМ - подготовка данных для отправки сообщения в Телеграм-бот
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ДатаПроведенияРабот", Формат(Объект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"));
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ВремяНачалаРабот", Формат(Объект.ВремяНачалаРабот,"ДЛФ=T"));
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ВремяОкончанияРабот", Формат(Объект.ВремяОкончанияРабот, "ДЛФ=T"));
		ТекущийОбъект.ДополнительныеСвойства.Вставить("Специалист", Объект.Специалист);

		Возврат;
		
	КонецЕсли;
	
	СтруктураИзмененныхДанныхДокумента = ПолучитьСтруктуруИзмененныхДанныхНаСервере();
	Если СтруктураИзмененныхДанныхДокумента.Количество() > 0 тогда
		Для каждого ЭлементСтруктуры из СтруктураИзмененныхДанныхДокумента цикл 
			ТекущийОбъект.ДополнительныеСвойства.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);	
		КонецЦикла;
	КонецЕсли;
	//--
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьСтруктуруИзмененныхДанныхНаСервере()
	
	СтруктураИзмененныхДанныхДокумента = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиентов.ВремяНачалаРабот,
	|	ВКМ_ОбслуживаниеКлиентов.ВремяОкончанияРабот,
	|	ВКМ_ОбслуживаниеКлиентов.Специалист,
	|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() цикл
		
		Если Результат.ДатаПроведенияРабот <> Объект.ДатаПроведенияРабот тогда
			СтруктураИзмененныхДанныхДокумента.Вставить("ДатаПроведенияРабот", Формат(Объект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"));	
		КонецЕсли;
		
		Если Результат.ВремяНачалаРабот <> Объект.ВремяНачалаРабот тогда
			СтруктураИзмененныхДанныхДокумента.Вставить("ВремяНачалаРабот", Формат(Объект.ВремяНачалаРабот, "ДЛФ=T"));
		КонецЕсли;
		
		Если Результат.ВремяОкончанияРабот <> Объект.ВремяОкончанияРабот тогда
			СтруктураИзмененныхДанныхДокумента.Вставить("ВремяОкончанияРабот", Формат(Объект.ВремяОкончанияРабот,"ДЛФ=T"));	
		КонецЕсли;
		
		Если Результат.Специалист <> Объект.Специалист тогда
			СтруктураИзмененныхДанныхДокумента.Вставить("Специалист", Объект.Специалист);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураИзмененныхДанныхДокумента;
	
КонецФункции

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти