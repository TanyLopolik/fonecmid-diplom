
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ОтпускаСотрудников.Количество() > 0 тогда
		ОформитьСтрокиТЧ();
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	НачалоГода = НачалоГода(Объект.Год);
	КонецГода = КонецГода(Объект.Год);
	
	Для каждого СтрОтпуск из Объект.ОтпускаСотрудников цикл
	
		Если СтрОтпуск.ДатаНачала < НачалоГода ИЛИ СтрОтпуск.ДатаОкончания > КонецГода тогда
			
			ТекстСообщения = СтрШаблон("Строка %1. Период отпуска не входит в выбранный год", 
			СтрОтпуск.НомерСтроки);
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;	
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	Если ТекущиеДанные.ДатаОкончания = Дата(1,1,1) тогда
		Возврат;
	КонецЕсли;
	
	Если ДнейОтпускаСотрудника(ТекущиеДанные.Сотрудник) > 28 тогда
		Если СписокСотрудников.НайтиПоЗначению(ТекущиеДанные.Сотрудник)	= Неопределено тогда
			СписокСотрудников.Добавить(ТекущиеДанные.Сотрудник);
			ИзменитьЦветСтрокТЧ();
		КонецЕсли;
	Иначе
		НомерЭлемента = СписокСотрудников.НайтиПоЗначению(ТекущиеДанные.Сотрудник);
		Если НомерЭлемента	<> Неопределено тогда
			СписокСотрудников.Удалить(НомерЭлемента);
			ИзменитьЦветСтрокТЧ();
		КонецЕсли;				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	Если ТекущиеДанные.ДатаНачала = Дата(1,1,1) тогда
		Возврат;
	КонецЕсли;
	
	Если ДнейОтпускаСотрудника(ТекущиеДанные.Сотрудник) > 28 тогда
		Если СписокСотрудников.НайтиПоЗначению(ТекущиеДанные.Сотрудник)	= Неопределено тогда
			СписокСотрудников.Добавить(ТекущиеДанные.Сотрудник);
			ИзменитьЦветСтрокТЧ();
		КонецЕсли;
	Иначе
		НомерЭлемента = СписокСотрудников.НайтиПоЗначению(ТекущиеДанные.Сотрудник);
		Если НомерЭлемента	<> Неопределено тогда
			СписокСотрудников.Удалить(НомерЭлемента);
			ИзменитьЦветСтрокТЧ();
		КонецЕсли;				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	
	НайденныйЭлемент = СписокСотрудников.НайтиПоЗначению(ТекущиеДанные.Сотрудник);
	Если НайденныйЭлемент = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	КоличествоУдаляемыхДней = (НачалоДня(ТекущиеДанные.ДатаОкончания) -  НачалоДня(ТекущиеДанные.ДатаНачала)) / (60*60*24);
	
	Если ДнейОтпускаСотрудника(ТекущиеДанные.Сотрудник) - КоличествоУдаляемыхДней <= 28 тогда
		СписокСотрудников.Удалить(НайденныйЭлемент);
		ИзменитьЦветСтрокТЧ();	
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АнализГрафика(Команда)
	
	Адрес = ПодготовитьДанныеДляАнализа();
	ПараметрыФормы = Новый Структура("Адрес", Адрес);
	
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика", 
	ПараметрыФормы, 
	Элементы.ОтпускаСотрудников);
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПодготовитьДанныеДляАнализа()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.ОтпускаСотрудников.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ОформитьСтрокиТЧ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ГрафикОтпусковОтпускаСотрудников.Сотрудник,
	|	СУММА(РАЗНОСТЬДАТ(ВКМ_ГрафикОтпусковОтпускаСотрудников.ДатаНачала,
	|		ВКМ_ГрафикОтпусковОтпускаСотрудников.ДатаОкончания, День)) КАК КоличествоДней
	|ПОМЕСТИТЬ ВТ_ДниОтпусков
	|ИЗ
	|	Документ.ВКМ_ГрафикОтпусков.ОтпускаСотрудников КАК ВКМ_ГрафикОтпусковОтпускаСотрудников
	|ГДЕ
	|	ВКМ_ГрафикОтпусковОтпускаСотрудников.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ГрафикОтпусковОтпускаСотрудников.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДниОтпусков.Сотрудник
	|ИЗ
	|	ВТ_ДниОтпусков КАК ВТ_ДниОтпусков
	|ГДЕ
	|	ВТ_ДниОтпусков.КоличествоДней > 28";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
		
	Пока Выборка.Следующий() цикл	
		СписокСотрудников.Добавить(Выборка.Сотрудник);
	КонецЦикла;
	
	ИзменитьЦветСтрокТЧ();
	
КонецПроцедуры

&НаСервере
Функция ДнейОтпускаСотрудника(Сотрудник)

	Отбор = Новый Структура("Сотрудник", Сотрудник);
	ДниОтпуска = 0;
	
	НайденныеСтроки = Объект.ОтпускаСотрудников.НайтиСтроки(Отбор);
	Для Каждого СтрСотрудник из НайденныеСтроки цикл
		
		ДниОтпуска = ДниОтпуска + (НачалоДня(СтрСотрудник.ДатаОкончания) -  НачалоДня(СтрСотрудник.ДатаНачала)) / (60*60*24);
		
	КонецЦикла;

	Возврат ДниОтпуска;

КонецФункции

&НаСервере
Процедура ИзменитьЦветСтрокТЧ()
	
	УсловноеОформление.Элементы.Очистить();
	
	Оформление = УсловноеОформление.Элементы.Добавить();
 	Оформление.Использование = Истина;
 	 
 	ПолеОформляемое1 = Оформление.Поля.Элементы.Добавить();
 	ПолеОформляемое1.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудниковСотрудник");
 	ПолеОформляемое2 = Оформление.Поля.Элементы.Добавить();
 	ПолеОформляемое2.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудниковДатаНачала");
 	ПолеОформляемое3 = Оформление.Поля.Элементы.Добавить();
 	ПолеОформляемое3.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудниковДатаОкончания");

 	Отбор = Оформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
 	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.Сотрудник");
 	Отбор.ПравоеЗначение = СписокСотрудников;
 	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
 	Отбор.Использование = Истина;
 	Оформление.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноСиреневый); 
	
КонецПроцедуры

#КонецОбласти