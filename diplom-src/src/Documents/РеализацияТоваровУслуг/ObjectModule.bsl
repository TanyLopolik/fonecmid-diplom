
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//ВКМ
	ЭтоАбонентскийДоговор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора") = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание; 
	Если ЭтоАбонентскийДоговор тогда
		НомерЭлемента = ПроверяемыеРеквизиты.Найти("Основание");
		Если НомерЭлемента <> Неопределено тогда
			ПроверяемыеРеквизиты.Удалить(НомерЭлемента);	
		КонецЕсли;
			
	Конецесли;
	//--
	
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
	//ВКМ
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);	
	КонецЕсли;
	//--
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//ВКМ
	Движения.ВКМ_ВзаиморасчетыПоРаботам.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыПоРаботам.Записать();
	
	Для каждого СтрокаУслуги ИЗ Услуги цикл
		Движение = Движения.ВКМ_ВзаиморасчетыПоРаботам.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Номенклатура = СтрокаУслуги.Номенклатура;
		Движение.Сумма = СтрокаУслуги.Сумма;	
	КонецЦикла;
	//--

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ВКМ_ВыполнитьАвтозаполнение() Экспорт
	
	//ВКМ
	ЭтоАбонентскийДоговор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора") = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание;
	
	Если НЕ ЭтоАбонентскийДоговор тогда
		ВызватьИсключение("Заполнение возможно только для договоров с видом Абонентский договор");	
	КонецЕсли;
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если НЕ ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) тогда
		
		ВызватьИсключение("Не заполнено значение константы Номенклатура (абонентская плата)");
				
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) тогда
		
		ВызватьИсключение("Не заполнено значение константы Номенклатура (работы специалиста)");
		
	КонецЕсли;
	
	Услуги.Очистить();
	СуммаАбонентскойПлаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
	Если СуммаАбонентскойПлаты <> 0 тогда
		
		НоваяСтрокаУслуги = Услуги.Добавить();
		НоваяСтрокаУслуги.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяСтрокаУслуги.Количество = 1;
		НоваяСтрокаУслуги.Цена = СуммаАбонентскойПлаты;
		НоваяСтрокаУслуги.Сумма = СуммаАбонентскойПлаты;
		
	КонецЕсли;
	
	ДобавитьУслугиПоВыполненнымРаботам(НоменклатураРаботыСпециалиста);
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	//--
	
КонецПроцедуры

Процедура ДобавитьУслугиПоВыполненнымРаботам(НоменклатураРаботыСпециалиста)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот) КАК КоличествоЧасов,
	|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот) КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(НАЧАЛОПЕРИОДА(&Дата, Месяц), КОНЕЦПЕРИОДА(&Дата, Месяц),,
	|		Клиент = &Клиент
	|	И Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() тогда
		Возврат;
	КонецЕсли;
		
	Выборка = Результат.Выбрать();	
	Выборка.Следующий();
	
	НоваяСтрокаУслуги = Услуги.Добавить();
	НоваяСтрокаУслуги.Номенклатура = НоменклатураРаботыСпециалиста;
	НоваяСтрокаУслуги.Количество = Выборка.КоличествоЧасов;
	НоваяСтрокаУслуги.Цена = Выборка.СуммаКОплате/Выборка.КоличествоЧасов;
	НоваяСтрокаУслуги.Сумма = Выборка.СуммаКОплате;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
